Binary Search kya hota hai?
Binary Search ek searching algorithm hai jo sorted list me kaam karta hai.
Ye "divide and conquer" approach use karta hai — yani har step me list ko aadha karta hai.

🔥 Binary Search ka step-by-step tareeqa:
Middle element nikalte hain list ka.

Compare karte hain middle element ko target se:

Agar barabar hai → target mil gaya! ✅

Agar target chhota hai → list ke left side me search karo.

Agar target bada hai → list ke right side me search karo.

Repeat karte jao jab tak target mil na jaaye, ya list khatam na ho jaaye.

📊 Example ke sath samjho:
Maan lo list hai:

ini
Copy
Edit
arr = [2, 4, 6, 8, 10, 12, 14]
target = 10
Steps:
List ka middle element:
mid = (0+6)//2 = 3
arr[3] = 8

Compare: 8 vs 10 → 10 bada hai → right side me search karte hain.

Nayi list range: index 4 to 6

Phir se middle:
mid = (4+6)//2 = 5 arr[5] = 12

Compare: 12 vs 10 → 10 chhota hai → left side me search karte hain.

Nayi list range: index 4 to 4

Phir se middle:
mid = (4+4)//2 = 4 arr[4] = 10

Mil gaya! Index 4 par target hai.

📈 Binary Search kyu fast hai?
Har step pe list aadhi hoti hai.

Agar list me n elements hain, to sirf log₂(n) steps lagte hain.

Example: 1,000,000 elements → sirf 20 steps me answer milta hai!

💥 Naive search me humein poori list dekhni padti hai, worst case me n steps lagte hain.

✍️ Binary Search ke kuch zaroori points:
Point	Detail
Sorted list zaroori hai	Agar list sorted nahi, to binary search kaam nahi karega
Time Complexity	O(log n)
Space Complexity (recursive version)	O(log n) recursion stack ke liye
📋 Summary ek line me:
"Binary search list ko bar bar aadha karta hai jab tak target mil nahi jaata."

Chaaho to mai isko aur zyada easy diagram se bhi samjha sakta hoon — jaise ek tree structure ki tarah. 🌳
Batao chaho to wo bhi samjha du? 😎📈